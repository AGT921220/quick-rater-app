{"version":3,"file":"static/js/main.7dd43b4d.js","mappings":"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","sources":["src/redux/auth/authReducer.js","src/redux/user/userReducer.js","src/redux/auth/index.js","src/redux/auth/store.js","src/Utils/Colors.js","src/Components/Utils/Loading.js","src/Services/authValues.js","src/Components/Utils/Evaluation.js","src/Services/Employee.js","src/Components/ChangeUserModal.js","src/Pantallas/Home.js","src/Services/Icon.js","src/Services/QuestionService.js","src/Components/Utils/Question.js","src/Components/Evaluation/MultipleQuestion.js","src/Components/Evaluation/OpenQuestion.js","src/Components/Evaluation/BooleanQuestion.js","src/Components/Evaluation/EvaluationQuestion.js","src/Services/connection.js","src/Pantallas/Evaluation.js","src/Navigation/UnauthenticatedStackNavigator.js","App.js","index.web.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["// authReducer.js\n\nconst initialState = {\n  isAuthenticated: false, // Inicialmente no autenticado\n  user:\n  {\n    id: null,\n    name: null,\n    paternal_surname: null,\n    maternal_surname: null,\n    client_id: null,\n    email: null,\n    client:null\n  }\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'OBTENER_ESTADO_USUARIO':\n      return {\n        ...state,\n      };\n    case 'AUTENTICAR_USUARIO':\n      let payload = action.payload\n      // console.log('action')\n      // console.log(payload)\n      return {\n        ...state,\n        isAuthenticated: true,\n        user:{\n          id: payload.id,\n          name: payload.name,\n          paternal_surname: payload.paternal_surname,\n          maternal_surname: payload.maternal_surname,\n          client_id: payload.client_,\n          email: payload.ema,\n          client:payload.client\n        }\n      };\n    case 'DESAUTENTICAR_USUARIO':\n      return {\n        ...state,\n        isAuthenticated: false,\n        user:{\n          id: null,\n          name: null,\n          paternal_surname: null,\n          maternal_surname: null,\n          client_id: null,\n          email: null,\n        }\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","// userReducer.js\n\nconst initialState = {\n  id: null,\n  name: null,\n  paternal_surname: null,\n  maternal_surname: null,\n  client_id: null,\n  email: null,\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'GET_USER_DATA':\n      return {\n        ...state,\n      };\n    case 'SAVE_USER_DATA':\n      let payload = action.payload\n      return {\n        ...state,\n        id: payload.id,\n        name: payload.name,\n        paternal_surname: payload.paternal_surname,\n        maternal_surname: payload.maternal_surname,\n        client_id: payload.client_,\n        email: payload.ema,\n      };\n      case 'DELETE_USER_DATA':\n        return {\n          ...state,\n          id: null,\n          name: null,\n          paternal_surname: null,\n          maternal_surname: null,\n          client_id: null,\n          email: null,\n        };\n  \n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","// index.js\n\nimport { combineReducers } from 'redux';\nimport authReducer from './authReducer'; // Importa tu reducer de autenticación aquí\nimport userReducer from '../user/userReducer';\n\nconst rootReducer = combineReducers({\n  auth: authReducer, // Agrega otros reducers si es necesario\n  user:userReducer\n});\n\nexport default rootReducer;\n","// store.js\n\nimport { createStore, applyMiddleware } from 'redux';\n// import thunk from 'redux-thunk'; // Opcional: Importa middleware si lo necesitas\nimport rootReducer from './index'; // Importa el archivo index.js de reducers\n\n// Combina el middleware si es necesario\n// const middleware = [thunk]; // Puedes agregar otros middleware aquí\n\n// Crea el store de Redux\nconst store = createStore(\n  rootReducer,\n//   applyMiddleware(...middleware)\n);\n\nexport default store;\n","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst DEFAULT_COLORS = {\n  PRIMARY_COLOR: \"#aaaaaa\",\n  SECONDARY_COLOR: \"#6495ED\",\n  BACKGROUND_COLOR: \"#ffffff\",\n  TEXT_COLOR: \"#ffffff\",\n};\n\nlet config = { ...DEFAULT_COLORS };\n\nasync function loadColorsFromAsyncStorage() {\n  try {\n    const savedColors = JSON.parse(await AsyncStorage.getItem('colors'));\n    if (savedColors) {\n      config = {\n        ...DEFAULT_COLORS,\n        ...savedColors,\n      };\n    }\n  } catch (error) {\n  }\n}\n\nloadColorsFromAsyncStorage();\n\nexport function getBackgroundColor() {\n  return config.BACKGROUND_COLOR;\n}\n\nexport function getPrimaryColor() {\n  return config.PRIMARY_COLOR;\n}\n\nexport function getSecondaryColor() {\n  return config.SECONDARY_COLOR;\n}\n\nexport function getTextColor() {\n  return config.TEXT_COLOR;\n}\n\nexport const setColors= async(newColors)=> {\n  let primary = newColors.primary??PRIMARY_COLOR\n  let secondary = newColors.secondary??SECONDARY_COLOR\n  let background = newColors.background??BACKGROUND_COLOR\n  let text = newColors.text??TEXT_COLOR\n  newColors ={\n     primary,\n     secondary,\n     background,\n     text,\n    }\n  \n  config = {\n    ...DEFAULT_COLORS,\n    ...newColors,\n  };\n\n  try {\n    AsyncStorage.setItem('colors', JSON.stringify(config));\n  } catch (error) {\n  }\n}\n\n// Para usar la función setColors, puedes proporcionar un objeto con los colores que deseas actualizar, por ejemplo:\n// setColors({ PRIMARY_COLOR: \"#ff0000\", BACKGROUND_COLOR: \"#e0e0e0\" });\n","import React from 'react'\r\nimport { StyleSheet, Text, View,Dimensions } from 'react-native'\r\nimport {Overlay} from \"react-native-elements\";\r\nimport {Grid} from \"react-native-animated-spinkit\";\r\nimport { getPrimaryColor } from '../../Utils/Colors';\r\n\r\n\r\nexport default function Loading(props) {\r\n    const {isVisible,text} =props;\r\n    return (\r\n        <Overlay\r\n            isVisible={isVisible} overlayStyle={styles.overlay}\r\n        >   \r\n            <View style={styles.view}>\r\n                <Grid sixe={78} color=\"gray\" >\r\n                </Grid>\r\n                {text && <Text style={styles.text}>{text}</Text>}\r\n            </View>\r\n        </Overlay>\r\n\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    overlay:{\r\n        backgroundColor: \"transparent\",\r\n\r\n        width:\"100%\",\r\n        height:Dimensions.get(\"window\").height,\r\n    },\r\n    view:{\r\n        flex:1,\r\n        justifyContent:\"center\",\r\n        alignItems:\"center\"\r\n    },\r\n    text:{\r\n        color:getPrimaryColor(),\r\n        marginTop:40,\r\n        fontSize:20,\r\n        // textTransform:\"uppercase\",\r\n    }\r\n\r\n})\r\n","//export const BASE_URL = \"https://quick-rater-multi.agsoftweb.com.mx/\"\n// export const BASE_URL = \"https://588d-189-231-149-107.ngrok-free.app/\"\n// export const BASE_URL = \"https://a791-177-245-33-143.ngrok-free.app/\"\nexport const BASE_URL = \"https://encuestas.agsoftweb.com.mx/\"\n\nexport const URL_API = BASE_URL+\"api\"\n\n\n","import AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { URL_API } from \"../../Services/authValues\";\nconst LOCAL_STORAGE_KEY = 'miLlaves';\n\n\nexport const saveEvaluationToLocalStorage = async (obj) => {\n  // Obtenemos el valor actual del localStorage\n  let data = await AsyncStorage.getItem(LOCAL_STORAGE_KEY) || '[]'\n  const currentData = JSON.parse(data);\n\n  // Creamos el nuevo arreglo con el objeto\n  const newArray = obj;\n\n  // Añadimos el nuevo arreglo al arreglo existente\n  currentData.push(newArray);\n\n  // Guardamos el arreglo actualizado en el localStorage\n  AsyncStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(currentData));\n}\n\nexport const getEvaluationToLocalStorage = async () => {\n  let data = await AsyncStorage.getItem(LOCAL_STORAGE_KEY) || '[]'\n  let test = JSON.parse(data);\n  return test\n}\n\nexport const testLocalStorage = async () => {\n  let localStorage = await getEvaluationToLocalStorage()\n\n}\nexport const sendAllEvaluations = async () => {\n  let answers = await getEvaluationToLocalStorage()\n\n  let savedEvaluations = []\n  answers.forEach((answer) => {\n    savedEvaluations.push(answer)\n  });\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(savedEvaluations), // Envía el array como un objeto JSON\n  };\n  try {\n    await fetch(`${URL_API}/quizes-bulk`, requestOptions);\n    await AsyncStorage.removeItem(LOCAL_STORAGE_KEY);\n    return true\n  } catch (error) {\n    return null\n  }\n\n}","import axios from \"axios\";\nimport { URL_API } from \"./authValues\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nexport const findEmployeeByCode = async(code)=>\n{\n  console.log('findEmployeeByCode')\n    try {   \n        const response = await axios.get(`${URL_API}/employees-by-code/${code}`);\n        return response.data\n      } catch (error) {\n        return error\n      }\n}\n\n\nexport const saveEmployeeToLocalStorage = async(employee)=>\n{\n  try {\n    const dataString = JSON.stringify(employee);\n    await AsyncStorage.setItem('employee', dataString);\n    console.log('Data saved to AsyncStorage');\n  } catch (error) {\n    console.error('Error saving data:', error);\n  }\n}\nexport const removeEmployeeFromLocalStorage = async () => {\n  try {\n    await AsyncStorage.removeItem('employee');\n    console.log('Data removed from AsyncStorage');\n  } catch (error) {\n    console.error('Error removing data:', error);\n  }\n}\n\nexport const getEmployeeToLocalStorage = async () => {\n  try {\n    const dataString = await AsyncStorage.getItem('employee');\n    if (dataString) {\n      return JSON.parse(dataString);\n    }\n  } catch (error) {\n    console.error('Error retrieving data:', error);\n    return null\n  }\n  return null; // Retorna null si no se encuentra el objeto o hay un error.\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, Modal, Button, StyleSheet } from 'react-native';\nimport { findEmployeeByCode, getEmployees, saveEmployeeToLocalStorage } from '../Services/Employee';\nimport { Picker } from '@react-native-picker/picker';\nimport { getPrimaryColor, getTextColor } from '../Utils/Colors';\nimport { Input } from 'react-native-elements';\n\nconst ChangeUserModal = (props) => {\n  const { hideChangeUserModal, setActiveEmployee, showErrorMessage, setLoading } = props\n  const [modalVisible, setModalVisible] = useState(true);\n  const [code, setCode] = useState(null);\n  const [selectedLanguage, setSelectedLanguage] = useState();\n\n  // useEffect(() => {\n  //   const fetchEmployees = async () => {\n  //     const data = await findEmployeeByCode();\n  //     setEmployees(data);\n  //   };\n\n  //   fetchEmployees();\n  // }, []);\n\n\n  const checkCode = async(code)=>\n  {\n    if(code.length == 4)\n    {\n      setLoading(true)\n      let employee = await findEmployeeByCode(code)\n      console.log(employee)\n      if(employee.success)\n      {\n        setLoading(false)\n        setActiveEmployee(employee.success)\n        saveEmployeeToLocalStorage(employee.success)\n        hideChangeUserModal()\n        setLoading(false)\n        return\n      }\n            setLoading(false)\n\n      showErrorMessage('Empleado no encontrado')\n    }\n  }\n\n  return (\n    <View style={styles.container}>\n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={modalVisible}\n        onRequestClose={() => {\n          setModalVisible(!modalVisible);\n        }}\n      >\n\n\n        <View style={styles.modalContainer}>\n          <View style={styles.modalContent}>\n            <Text>Ingresa tu código</Text>\n\n            <Input placeholder=\"Código\"\n              value={code}\n              placeholderTextColor={getPrimaryColor()}// Cambia el color del placeholder\n              style={{ margin: 2, padding: 0, marginTop: 10, fontSize: 20 }}\n              inputStyle={{\n                color: getPrimaryColor(),\n              }}\n              onChangeText={(response) => {\n                checkCode(response)\n              }}\n            ></Input>\n\n\n            {/* {employees &&\n\n              <View>\n                <Picker\n                  selectedValue={selectedLanguage}\n                  style={{ height: 50, width: '100%', justifyContent: 'center', textAlign: 'center' }}\n                  onValueChange={(itemValue, itemIndex) =>\n                    console.log(itemValue)\n                    // setActiveEmployee(itemValue)\n                  }>\n                  <Picker.Item label=\"Java\" value=\"java\" />\n                  <Picker.Item label=\"JavaScript\" value=\"js\" />\n                  {employees.success.map((employee) => (\n                    <Picker.Item key={employee.id} label={employee.name + ' ' + employee.code} value={employee} />\n                  ))}\n                </Picker>\n              </View>\n            } */}\n\n\n            <Button\n              title=\"Cerrar\"\n              onPress={() => hideChangeUserModal()}\n            />\n          </View>\n        </View>\n      </Modal>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)', // Fondo semi-transparente\n  },\n  modalContent: {\n    backgroundColor: '#FFFFFF',\n    padding: 20,\n    borderRadius: 10,\n    alignItems: 'center',\n    width: '70%'\n  },\n});\n\nexport default ChangeUserModal;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { View, StyleSheet, Image, StatusBar, Dimensions, TouchableOpacity } from \"react-native\";\nimport Toast from \"react-native-easy-toast\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Button, Text, Icon, colors } from 'react-native-elements';\nimport Loading from '../Components/Utils/Loading';\nimport { getColors, getIcon, getIconToLocalStorage, saveIconToLocalStorage } from '../Services/Icon';\nimport { BASE_URL } from '../Services/authValues';\nimport { getPrimaryColor, setColors } from '../Utils/Colors';\nimport * as Font from 'expo-font'; // Importa el módulo de fuentes\nimport { getEvaluationToLocalStorage, sendAllEvaluations, testLocalStorage } from '../Components/Utils/Evaluation';\nimport ChangeUserModal from '../Components/ChangeUserModal';\nimport { getEmployeeToLocalStorage, removeEmployeeFromLocalStorage } from '../Services/Employee';\nimport { LinearGradient } from 'expo-linear-gradient';\n// import ChangeUserModal from \"../Components/ChangeUserModal\"\n\nexport default function Home({ route }) {\n\n  const toastRef = useRef();\n  const navigation = useNavigation();\n\n  const windowWidth = Dimensions.get('window').width;\n  const [loading, setloading] = useState(true);\n  const [icon, setIcon] = useState(require(\"../../assets/logo.png\"))\n  const [backgroundColor, setBackgroundColor] = useState('#ffffff');\n\n  const [savedEvaluations, setSavedEvaluations] = useState(null);\n  const [changeUserModalVisibility, setChangeUserModalVisibility] = useState(false);\n  const [activeEmployee, setActiveEmployee] = useState(null);\n\n\n  const sendSavedEvaluations = async () => {\n    console.log('savedEvaluations')\n    console.log(savedEvaluations)\n    if (savedEvaluations && savedEvaluations != []) {\n      let sended = await sendAllEvaluations()\n      if (!sended) {\n        toastRef.current.show('No se pudieron enviar las encuestas!')\n        return\n      }\n      setSavedEvaluations(null)\n      toastRef.current.show('Encuestas enviadas correctamente!')\n    }\n  }\n\n  useEffect(() => {\n    (async () => {\n      if (route.params) {\n        let evaluations = await getEvaluationToLocalStorage()\n        setSavedEvaluations(evaluations)\n        return\n      }\n      await Font.loadAsync({\n        'IndieFlower-Regular': require('../../assets/fonts/IndieFlower-Regular.ttf'), // Ruta correcta a la fuente\n      });\n\n      let iconUrl = await getIcon()\n      let personalizedIcon = null\n      if (iconUrl) {\n        await saveIconToLocalStorage(BASE_URL + '/' + iconUrl.success)\n        personalizedIcon = BASE_URL + '/' + iconUrl.success\n      }\n      personalizedIcon = await getIconToLocalStorage()\n      if (personalizedIcon) {\n        setIcon({ uri: personalizedIcon })\n      }\n\n      let savedEmployee = await getEmployeeToLocalStorage()\n      if (savedEmployee) {\n        setActiveEmployee(savedEmployee)\n      }\n      let colors = await getColors()\n      if (colors && colors.success && colors.success.apply) {\n        await setColors(colors.success);\n        setBackgroundColor(colors.success.background)\n      }\n\n      let evaluations = await getEvaluationToLocalStorage()\n      console.log(evaluations)\n      if (evaluations && Array.isArray(evaluations) && evaluations.length > 0) {\n        setSavedEvaluations(evaluations)\n      }\n\n\n    })();\n    setTimeout(() => {\n      setloading(false)\n    }, 1000);\n  }, [route]);\n\n\n  const startEvaluation = async () => {\n    await testLocalStorage()\n    navigation.navigate('Evaluation')\n  }\n\n  const showChangeUserModal = () => {\n    setChangeUserModalVisibility(true)\n  }\n  const hideChangeUserModal = () => {\n    console.log('hideChangeUserModal')\n    setChangeUserModalVisibility(false)\n  }\n  const closeEmployeeSession = () => {\n    removeEmployeeFromLocalStorage()\n    setActiveEmployee(null)\n  }\n    const showErrorMessage = (message) => {\n      console.log('showErrorMessage')\n    toastRef.current.show(message)\n    hideChangeUserModal()\n  }\n\n\n  return (\n    <LinearGradient\n      colors={['#0077CC', '#606060']}\n      style={{\n        flex: 1,\n        // backgroundColor:'pink'\n        backgroundColor: backgroundColor\n      }}\n    >\n      <StatusBar backgroundColor=\"#000000\"></StatusBar>\n\n\n      {changeUserModalVisibility == true ? <ChangeUserModal\n        setLoading={setloading}\n        hideChangeUserModal={hideChangeUserModal}\n        setActiveEmployee={setActiveEmployee}\n        showErrorMessage={showErrorMessage}       \n       ></ChangeUserModal> : null}\n\n\n      {loading == false && activeEmployee ?\n        <View\n          style={{ flex: 1, flexDirection: 'row', justifyContent: 'space-between' }}\n        >\n\n          <TouchableOpacity\n            onPress={() => showChangeUserModal()}\n            style={styles.floatingChangeUserButton}\n          >\n            <Icon\n              name=\"account-switch\"\n              type=\"material-community\"\n              color={getPrimaryColor()}\n              size={40}\n            />\n          </TouchableOpacity>\n\n          {activeEmployee ?\n            <TouchableOpacity\n              onPress={() => closeEmployeeSession()}\n              style={styles.floatingChangeUserButton}\n            >\n\n              <Icon\n                name=\"logout\"\n                type=\"material-community\"\n                color='red'\n                size={40}\n              />\n            </TouchableOpacity> : null}\n\n        </View>\n\n        : null}\n\n\n      {activeEmployee ?\n        <View>\n          <Image\n            source={{ uri: `${BASE_URL}${activeEmployee.image}` }}\n            style={{\n              width: windowWidth * 0.3,\n              height: windowWidth * 0.3,\n              marginTop: 20,\n              alignSelf: \"center\",\n              resizeMode: 'contain',\n              borderRadius: 100,\n            }}\n          />\n          <Text style={{ textAlign: 'center', color:'#ffffff', fontFamily: 'IndieFlower-Regular', fontSize: 20 }}>{activeEmployee.full_name}</Text>\n\n        </View> : null}\n\n\n      {loading == false ? (\n        <Image\n          source={icon}\n          style={{\n            width: windowWidth * 0.8,\n            height: windowWidth * 0.5,\n            marginTop: 50,\n            alignSelf: \"center\",\n            resizeMode: 'contain',\n          }}\n        />) : null\n      }\n          <Text style={{ textAlign: 'center', color:'#ffffff', fontFamily: 'IndieFlower-Regular', fontSize: 20 }}>EVALUACION DE SATISFACCION</Text>\n\n      {loading == false && activeEmployee ? (\n        <Button\n          title=\"Iniciar Evaluación\"\n          containerStyle={styles.btnEntrar}\n          buttonStyle={{\n            backgroundColor: getPrimaryColor(),\n            padding: 10,\n            paddingHorizontal: 25,\n            borderRadius: 15,\n\n          }}\n          titleStyle={{\n            fontSize: 30,\n            fontFamily: 'IndieFlower-Regular',\n            fontWeight: '400',\n          }}\n\n          onPress={() => startEvaluation()}\n        ></Button>\n      ) : null}\n\n\n\n      {activeEmployee == null ?\n        <Button\n          title=\"Seleccionar Empleado\"\n          containerStyle={styles.btnSelectEmployee}\n          buttonStyle={{\n            backgroundColor: getPrimaryColor(),\n            padding: 10,\n            paddingHorizontal: 25,\n            borderRadius: 35,\n            fontSize: 8\n\n          }}\n          titleStyle={{\n            fontSize: 30,\n            fontFamily: 'IndieFlower-Regular',\n            fontWeight: '400',\n          }}\n\n          onPress={() => showChangeUserModal()}\n        ></Button>\n        : null}\n\n      {savedEvaluations !== null && savedEvaluations != [] && savedEvaluations.length > 0\n        // && savedEvaluations >= 1 \n        ? (\n          <View style={styles.floatingButtonContainer}>\n            <TouchableOpacity\n              onPress={() => sendSavedEvaluations()}\n\n              style={styles.floatingButton}\n            // onPress={handleFloatingButtonPress}\n            >\n\n              <Text style={styles.floatingButtonText}>{savedEvaluations.length}</Text>\n              {/* <Text style={styles.floatingButtonText}>SI HAY</Text> */}\n\n            </TouchableOpacity>\n          </View>\n        ) : null}\n\n\n\n      <Loading isVisible={loading} text=\"Cargando\n       Configuración\" />\n\n      <Toast ref={toastRef} position=\"center\" opacity={0.8}></Toast>\n      {/* Rest of the code */}\n    </LinearGradient>\n\n  );\n}\n\nconst styles = StyleSheet.create({\n\n  container: {\n    flex: 1,\n    // backgroundColor: \"#011734\"\n    // backgroundColor:{loading?'#ffffff':getBackgroundColor()}\n  },\n  textobaner: {\n    fontWeight: \"bold\",\n    fontSize: 30,\n    color: \"#fff\",\n    alignSelf: \"center\",\n  },\n  btnEntrar: {\n    marginTop: 100,\n    marginBottom: 50,\n    alignItems: 'center',\n    margin: 'auto',\n    justifyContent: 'center',\n    width: '100%',\n    fontSize: 5,\n  },\n  btnSelectEmployee: {\n    marginTop: 150,\n    marginBottom: 50,\n    alignItems: 'center',\n    margin: 'auto',\n    justifyContent: 'center',\n    width: '100%',\n    fontSize: 10,\n  },\n\n\n  floatingButtonContainer: {\n    // position: 'absolute',\n    bottom: 20, // Ajusta la posición vertical según tus necesidades\n    left: 20\n    // right: 20, // Ajusta la posición horizontal según tus necesidades\n  },\n  floatingButton: {\n    width: 60,\n    height: 60,\n    borderRadius: 30,\n    backgroundColor: 'blue', // Color de fondo del botón\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  floatingChangeUserButton: {\n    width: 60,\n    height: 60,\n    borderRadius: 30,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  floatingButtonText: {\n    color: 'white', // Color del texto del botón\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n})","import axios from \"axios\";\nimport { URL_API } from \"./authValues\";\nimport { Buffer } from 'buffer';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nexport const getIcon = async()=>\n{\n    try {   \n        const response = await axios.get(`${URL_API}/icon`);\n        return response.data\n      } catch (error) {\n        return null\n      }\n}\n\nexport const getColors = async()=>\n{\n    try {   \n        const response = await axios.get(`${URL_API}/colors`);\n//        return {'error':'error'}\n        return response.data\n      } catch (error) {\n        return null\n        throw error;\n      }\n}\n\nexport const saveIconToLocalStorage = async (imageURL) => {\n  try {\n    const response = await axios.get(imageURL, {\n      responseType: 'arraybuffer',\n    });\n\n    const base64Image = Buffer.from(response.data, 'binary').toString('base64');\n\n    await AsyncStorage.setItem('icon', base64Image);\n  } catch (error) {\n\n  }\n};\n\nexport const getIconToLocalStorage = async () => {\n  try {\n    const base64Image = await AsyncStorage.getItem('icon');\n    if (base64Image) {\n      return `data:image/jpeg;base64,${base64Image}`;\n    }\n  } catch (error) {\n    return null\n  }\n  return null;\n};","import axios from \"axios\";\nimport { URL_API } from \"./authValues\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n// import { questionsJson } from \"../mockJson/questions\";\n\n\nexport const getQuestions = async()=>\n{\n    try {   \n        const response = await axios.get(`${URL_API}/questions`);\n        await saveQuestionsToLocalStorage(response.data)\n        // const response = questionsJson\n        return response.data\n      } catch (error) {\n        return null\n      }\n}\n\nconst saveQuestionsToLocalStorage = async(questions)=>\n{\n  try {\n    const dataString = JSON.stringify(questions);\n    await AsyncStorage.setItem('questions', dataString);\n    console.log('Data saved to AsyncStorage');\n  } catch (error) {\n    console.error('Error saving data:', error);\n  }\n}\n\nexport const getQuestionsToLocalStorage = async () => {\n  try {\n    const dataString = await AsyncStorage.getItem('questions');\n    if (dataString) {\n      return JSON.parse(dataString);\n    }\n  } catch (error) {\n    console.error('Error retrieving data:', error);\n    return null\n  }\n  return null; // Retorna null si no se encuentra el objeto o hay un error.\n}\n","import AsyncStorage from \"@react-native-async-storage/async-storage\"\nimport { URL_API } from \"../../Services/authValues\"\nconst key = '@answersQuestions'\nexport const saveQuestionResponse = async (questionId, questionType, response) => {\n    let answer = { 'question_id': questionId, 'response': response, 'type': questionType }\n    let answers = await getAnswers()\n\n    switch (questionType) {\n        case 'open':\n            saveOpenQuestionResponse(answers, answer)\n            break;\n        case 'multiple':\n            saveOpenQuestionResponse(answers, answer)\n            break;\n        case 'boolean':\n            saveOpenQuestionResponse(answers, answer)\n            break;\n        case 'evaluation':\n            saveOpenQuestionResponse(answers, answer)\n            break;\n\n        default:\n            break;\n    }\n}\n\n\nconst saveOpenQuestionResponse = async (answers, answer) => {\n\n    if (answers.length === 0) {\n        answers.push(answer)\n        saveAnswers(answers)\n        return;\n    }\n\n    answers.map((element, index) => {\n        if (element.question_id == answer.question_id) {\n            answers.splice(index, 1);\n        }\n    });\n    answers.push(answer)\n    saveAnswers(answers)\n}\n\n\nconst saveAnswers = async (answers) => {\n    await AsyncStorage.setItem(key, JSON.stringify(answers))\n}\nexport const getAnswers = async () => {\n    let answers = await AsyncStorage.getItem(key)\n    if (!answers) {\n        return []\n    }\n    return JSON.parse(answers)\n}\n\nexport const clearAnswers = async () => {\n    await AsyncStorage.removeItem(key);\n\n    // await AsyncStorage.clear()\n}\n\nexport const sendEvaluation = async (answers) => {\n//    let answers = await getAnswers()\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ answers }),\n      };\n      \n      try {\n        await fetch(`${URL_API}/quizes`, requestOptions);\n        return {'success':'Gracias por responder la encuesta'}\n      } catch (error) {\n        return null\n      }\n}\nexport const getQuestionValue = async (id) => {\n    let answers = await getAnswers()\n    let response = null\n    answers.forEach((answer) => {\n\n        if (answer.question_id === id) {\n            response = answer.response;\n        }\n    });\n    return response\n}","import React, { useState } from 'react';\nimport { Dimensions, StyleSheet, Text, View } from 'react-native';\nimport RadioGroup from 'react-native-radio-buttons-group';\nimport { saveQuestionResponse } from '../Utils/Question';\nimport { getSecondaryColor, getTextColor } from '../../Utils/Colors';\n\nexport default function MultipleQuestion(props) {\n    const { question, value } = props;\n\n    let questionOptions = question.multiple_values.map((element) => {\n        return {'borderColor':getTextColor(),'color':getSecondaryColor(), 'id': element.id, 'label': element.value, 'value': element.id,labelStyle: {\n            color: getTextColor(),\n          },        \n        }\n    });\n\n    \n\n    const [selectedId, setSelectedId] = useState(value);\n\n    const selectOption = (index) => {\n        setSelectedId(index)\n        saveQuestionResponse(question.id, question.type, index)\n    }\n\n    return (\n        <View>\n\n            <RadioGroup\n                radioButtons={questionOptions}\n                onPress={selectOption}\n                selectedId={selectedId}\n                containerStyle={{ justifyContent: 'center', textAlign: 'center', flexDirection: 'row', marginTop: 20}}  \n                circleSize={20}\n                color={'red'}\n\n\n                />\n        </View>\n\n    );\n}","import React, { useState } from 'react';\nimport { Dimensions, StyleSheet } from 'react-native';\nimport { saveQuestionResponse } from '../Utils/Question';\nimport { Input } from 'react-native-elements';\nimport { getTextColor } from '../../Utils/Colors';\n\nexport default function OpenQuestion(props) {\n    const { question, value } = props;\n\n    const [localValue, setValue] = useState(value)\n    return (\n        <Input placeholder=\"Respuesta..\"\n        value={localValue}\n        placeholderTextColor={getTextColor()}// Cambia el color del placeholder\n        style={{ margin: 20,  padding: 0, marginTop: 100, fontSize:30}}\n    inputStyle={{ \n        color: getTextColor(),\n     }}\n        onChangeText={(response) => {\n          saveQuestionResponse(question.id, question.type, response)\n        }}\n    ></Input>\n    );\n}","import React, { useState } from 'react';\nimport { Dimensions, StyleSheet, View } from 'react-native';\nimport RadioGroup from 'react-native-radio-buttons-group';\nimport { saveQuestionResponse } from '../Utils/Question';\nimport { getSecondaryColor, getTextColor } from '../../Utils/Colors';\n\nexport default function BooleanQuestion(props) {\n    const { question, value } = props;\n\n    const booleanOptions = [{ 'id': 1, 'label': 'Sí', 'value': 1, 'borderColor': getTextColor(), 'color': getSecondaryColor(),\n    labelStyle: {\n        color: getTextColor(),\n      } },\n    { 'id': 0, 'label': 'No', 'value': 0, 'borderColor': getTextColor(), 'color': getSecondaryColor(),\n    labelStyle: {\n        color: getTextColor(),\n      } }]\n\n    const [selectedId, setSelectedId] = useState(value);\n\n    const selectOption = (index) => {\n        setSelectedId(index)\n        saveQuestionResponse(question.id, question.type, index)\n    }\n\n    return (\n        <View>\n\n            <RadioGroup\n                radioButtons={booleanOptions}\n                onPress={selectOption}\n                selectedId={selectedId}\n                containerStyle={{ justifyContent: 'center', textAlign: 'center', flexDirection: 'row', marginTop: 20 }}\n            />\n        </View>\n\n    );\n}\n\nconst styles = StyleSheet.create({\n\n    overlay: {\n        backgroundColor: \"transparent\",\n\n        width: \"100%\",\n        height: Dimensions.get(\"window\").height,\n    },\n    view: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    text: {\n        color: \"white\",\n        marginTop: 20,\n        fontSize: 24,\n        textTransform: \"uppercase\"\n    }\n\n})\n","import React, { useState } from 'react';\nimport { Dimensions, StyleSheet, TouchableOpacity, View } from 'react-native';\nimport RadioGroup from 'react-native-radio-buttons-group';\nimport { saveQuestionResponse } from '../Utils/Question';\nimport { getSecondaryColor, getTextColor } from '../../Utils/Colors';\nimport { Icon } from 'react-native-elements';\n\nexport default function EvaluationQuestion(props) {\n    const { question, value } = props;\n    const emojiStatus = question.emoji_status\n    const iconEmojiSize = 40\n    const EVALUATION_1 = 1\n    const EVALUATION_2 = 2\n    const EVALUATION_3 = 3\n    const EVALUATION_4 = 4\n    const EVALUATION_5 = 5\n\n    let questionOptions = []\n    for (let i = question.evaluation_min; i <= question.evaluation_max; i++) {\n        questionOptions.push({\n            'borderColor': getTextColor(), 'color': getSecondaryColor(), 'id': i,\n            'label': i,\n            'value': i, labelStyle: {\n                color: getTextColor(),\n            }\n        })\n    }\n\n    const [selectedId, setSelectedId] = useState(value);\n\n    const selectOption = (index) => {\n        setSelectedId(index)\n        saveQuestionResponse(question.id, question.type, index)\n    }\n\n    const [selectedIcon, setSelectedIcon] = useState(\"sentiment-very-dissatisfied\");\n\n    const selectIconOption = (iconSelected) => {\n        selectOption(iconSelected)\n        setSelectedIcon(iconSelected);\n    };\n    return (\n        <View>\n\n            {emojiStatus == true ? (\n                <View style={{flexDirection:'row', marginTop:20,justifyContent:'space-around'}}>\n                    <TouchableOpacity onPress={() => selectIconOption(EVALUATION_1)}>\n                        <Icon\n                            name=\"sentiment-very-dissatisfied\"\n                            type=\"material\"\n                            color={selectedIcon === EVALUATION_1 ? \"red\" : \"black\"}\n                            size={iconEmojiSize}\n                        />\n                    </TouchableOpacity>\n                    <TouchableOpacity onPress={() => selectIconOption(EVALUATION_2)}>\n                        <Icon\n                            name=\"sentiment-dissatisfied\"\n                            type=\"material\"\n                            color={selectedIcon === EVALUATION_2 ? \"orange\" : \"black\"}\n                            size={iconEmojiSize}\n                        />\n                    </TouchableOpacity>\n                    <TouchableOpacity onPress={() => selectIconOption(EVALUATION_3)}>\n                        <Icon\n                            name=\"sentiment-neutral\"\n                            type=\"material\"\n                            color={selectedIcon === EVALUATION_3 ? \"#FFF823\" : \"black\"}\n                            size={iconEmojiSize}\n                        />\n                    </TouchableOpacity>\n                    <TouchableOpacity onPress={() => selectIconOption(EVALUATION_4)}>\n                        <Icon\n                            name=\"sentiment-satisfied-alt\"\n                            type=\"material\"\n                            color={selectedIcon === EVALUATION_4 ? \"#7EE711\" : \"black\"}\n                            size={iconEmojiSize}\n                        />\n                    </TouchableOpacity>\n                    <TouchableOpacity onPress={() => selectIconOption(EVALUATION_5)}>\n                        <Icon\n                            name=\"sentiment-very-satisfied\"\n                            type=\"material\"\n                            color={selectedIcon === EVALUATION_5 ? \"#01D201\" : \"black\"}\n                            size={iconEmojiSize}\n                        />\n                    </TouchableOpacity>\n                </View>\n\n            ) :\n                (\n                    <RadioGroup\n                        radioButtons={questionOptions}\n                        onPress={selectOption}\n                        selectedId={selectedId}\n                        containerStyle={{ justifyContent: 'center', textAlign: 'center', flexDirection: 'row', marginTop: 20 }}\n                    />)}\n        </View>\n\n    );\n}\n\nconst styles = StyleSheet.create({\n\n    overlay: {\n        backgroundColor: \"transparent\",\n\n        width: \"100%\",\n        height: Dimensions.get(\"window\").height,\n    },\n    view: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    text: {\n        color: \"white\",\n        marginTop: 20,\n        fontSize: 24,\n        textTransform: \"uppercase\"\n    }\n\n})\n","import NetInfo from '@react-native-community/netinfo';\n\nexport const checkInternetConnection = async () => {\n    try {\n      const state = await NetInfo.fetch();\n      return state.isConnected;\n    } catch (error) {\n      console.error('Error al verificar la conexión:', error);\n      return false;\n    }\n  };\n  ","import React, { useState, useRef, useEffect } from 'react';\nimport { View, StyleSheet, StatusBar, Dimensions } from \"react-native\";\nimport Toast from \"react-native-easy-toast\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Button, Text } from 'react-native-elements';\nimport Loading from '../Components/Utils/Loading';\nimport { getQuestions, getQuestionsToLocalStorage } from '../Services/QuestionService';\nimport { clearAnswers, getAnswers, getQuestionValue, sendEvaluation } from '../Components/Utils/Question';\nimport MultipleQuestion from '../Components/Evaluation/MultipleQuestion';\nimport OpenQuestion from '../Components/Evaluation/OpenQuestion';\nimport BooleanQuestion from '../Components/Evaluation/BooleanQuestion';\nimport EvaluationQuestion from '../Components/Evaluation/EvaluationQuestion';\nimport StepIndicator from 'react-native-step-indicator';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { getPrimaryColor, getSecondaryColor, getTextColor } from '../Utils/Colors';\nimport { BackgroundImage } from 'react-native-elements/dist/config';\nimport { checkInternetConnection } from '../Services/connection';\nimport { getEvaluationToLocalStorage, saveEvaluationToLocalStorage, testLocalStorage } from '../Components/Utils/Evaluation';\nimport { getEmployeeToLocalStorage } from '../Services/Employee';\nimport { LinearGradient } from 'expo-linear-gradient';\n\nconst windowHeight = Dimensions.get('window').height;\n\nexport default function Evaluation() {\n\n  const toastRef = useRef();\n  const [questions, setQuestions] = useState(false);\n  const [totalQuestions, setTotalQuestions] = useState(false);\n  const navigation = useNavigation();\n  const [loading, setloading] = useState(true);\n  const [currentPosition, setPosition] = useState(0);\n  const [isEvaluating, setIsEvaluating] = useState(false);\n\n  const nextStep = async () => {\n\n    await testLocalStorage()\n    let next = currentPosition + 1\n    setPosition(next)\n  }\n\n  const backStep = async () => {\n    await testLocalStorage()\n\n    let next = currentPosition - 1\n    setPosition(next)\n  }\n\n  const evaluate = async () => {\n    if (isEvaluating) {\n      return\n    }\n    setIsEvaluating(true)\n    let connection = await checkInternetConnection()\n    let savedEmployee = await getEmployeeToLocalStorage()\n\n    let answers = { 'answers': await getAnswers(), 'employee_id': savedEmployee.id ?? null }\n    if (answers.length == 0) {\n      toastRef.current.show('Debes responder al menos 1 pregunta')\n      setIsEvaluating(false)\n      return\n    }\n\n    if (!connection) {\n      await saveEvaluationToLocalStorage(answers)\n      toastRef.current.show('No hay conexión, la encuesta se guardó en el dispositivo')\n      goToHome(2000)\n      return\n    }\n    let response = await sendEvaluation(answers)\n\n    if (!response) {\n      await saveEvaluationToLocalStorage(answers)\n      toastRef.current.show('Hubo un problema en el servidor, la encuesta se guardó en el dispositivo')\n      goToHome(2000)\n      return\n    }\n\n\n    toastRef.current.show(response.success)\n    goToHome(1000)\n\n  }\n  let labels = [];\n\n  const goToHome = (time) => {\n    setTimeout(() => {\n      navigation.navigate('Home', { redirectedFromEvaluation: true });\n    }, time);\n\n  }\n\n  const customStyles = {\n    stepIndicatorSize: 25,\n    currentStepIndicatorSize: 30,\n    separatorStrokeWidth: 2,\n    currentStepStrokeWidth: 3,\n    stepStrokeCurrentColor: getSecondaryColor(),\n    stepStrokeWidth: 3,\n    stepStrokeFinishedColor: getSecondaryColor(),\n    stepStrokeUnFinishedColor: getPrimaryColor(),\n    separatorFinishedColor: getSecondaryColor(),\n    separatorUnFinishedColor: getPrimaryColor(),\n    stepIndicatorFinishedColor: getSecondaryColor(),\n    stepIndicatorUnFinishedColor: '#ffffff',\n    stepIndicatorCurrentColor: '#ffffff',\n    stepIndicatorLabelFontSize: 13,\n    currentStepIndicatorLabelFontSize: 13,\n    stepIndicatorLabelCurrentColor: getSecondaryColor(),\n    stepIndicatorLabelFinishedColor: '#ffffff',\n    stepIndicatorLabelUnFinishedColor: getPrimaryColor(),\n    labelColor: getTextColor(),\n    labelSize: 15,\n    currentStepLabelColor: getSecondaryColor(),\n    marginTop: 40\n  }\n\n\n  useEffect(() => {\n    (async () => {\n      // 1. Limpia respuestas previas\n      console.log('🔄 clearAnswers');\n      await clearAnswers();\n\n      // 2. Intento desde API\n      console.log('🔄 getQuestions');\n      let questions = await getQuestions();\n      console.log('› getQuestions devolvió', questions);\n\n      // 3. Fallback a localStorage si no vino nada\n      if (!questions) {\n        console.log('⚠️ Sin preguntas de la API, pruebo getQuestionsToLocalStorage');\n        questions = await getQuestionsToLocalStorage();\n        console.log('› getQuestionsToLocalStorage devolvió', questions);\n      }\n\n      // 4. Validación final: ¿tengo preguntas con data no vacía?\n      const hasData =\n        questions &&\n        Array.isArray(questions.data) &&\n        questions.data.length > 0;\n      console.log('🔍 Validación de contenido:', hasData ? '✅ OK' : '🚫 VACÍO');\n\n      if (!hasData) {\n        alert('No se encontraron preguntas.');\n        goToHome(2000);\n        return;\n      }\n\n      // 5. Si hay preguntas, actualizo estado\n      console.log(`🎉 Cargando ${questions.data.length} preguntas`);\n      setQuestions(questions.data);\n      setTotalQuestions(questions.total);\n    })();\n  }, []);\n\n\n  const loadingFalse = () => {\n    setTimeout(() => {\n      setloading(false)\n    }, 1000);\n\n  }\n  let allScreens = [];\n  if (totalQuestions >= 1) {\n    allScreens = questions.map((element, index) => (\n      <View style={{ height: windowHeight * 0.8 }}>\n        <QuestionScreen key={index} question={element} />\n      </View>\n\n    ));\n    for (let index = 1; index <= totalQuestions; index++) {\n      labels.push(index)\n    }\n    console.log(labels)\n  }\n\n  return (\n    // <BackgroundImage\n    //   source={require('../../assets/wood_background.jpg')}\n    //   blurRadius={2} // Ajusta el valor según tu preferencia\n    //   opacity={0.8}\n    //   style={{ flex: 1, height: windowHeight }}\n    // >\n    <LinearGradient\n      colors={['#0077CC', '#606060']}\n      style={{\n        flex: 1,\n        // backgroundColor:'pink'\n        // backgroundColor: backgroundColor\n      }}\n    >\n      <KeyboardAwareScrollView>\n\n        <View style={styles.container}>\n          <StatusBar></StatusBar>\n\n\n          {totalQuestions >= 1 ? (\n            <View style={{\n              flex: 1\n              , backgroundColor: 'rgba(0, 0, 0, 0.5)'\n            }}>\n\n\n              {allScreens[currentPosition]}\n\n\n              <View style={{ height: windowHeight * 0.2 }}>\n\n                <View style={styles.containerBtn}>\n                  {(currentPosition >= 1) ?\n                    <Button\n                      title=\"Anterior\"\n                      containerStyle={styles.btnEntrar}\n                      buttonStyle={{ backgroundColor: getPrimaryColor() }}\n                      onPress={() => backStep()}\n                    ></Button> : null\n                  }\n\n\n                  {(currentPosition + 1 < totalQuestions) ?\n                    <Button\n                      title=\"Siguiente\"\n                      containerStyle={styles.btnEntrar}\n                      buttonStyle={{ backgroundColor: getPrimaryColor() }}\n                      onPress={() => nextStep()}\n                    ></Button> : null\n                  }\n                  {(currentPosition + 1 == totalQuestions) ?\n                    <Button\n                      title=\"Enviar Evaluación\"\n                      containerStyle={styles.btnEntrar}\n                      buttonStyle={{ backgroundColor: getPrimaryColor() }}\n                      onPress={() => evaluate()}\n                    ></Button>\n                    : null\n                  }\n\n                </View>\n\n\n                {totalQuestions >= 1 ?\n                  (\n                    < StepIndicator\n                      customStyles={customStyles}\n                      currentPosition={currentPosition}\n                      labels={labels}\n                      stepCount={totalQuestions}\n                    />) : null}\n              </View>\n\n\n\n\n              <Loading isVisible={loading} text=\"Cargando Preguntas\" />\n              <Toast ref={toastRef} position=\"center\" opacity={0.8}></Toast>\n\n\n            </View>\n          ) : null}\n\n        </View>\n\n      </KeyboardAwareScrollView>\n      {/* </BackgroundImage> */}\n    </LinearGradient>\n\n  );\n}\n\n\n\nexport function QuestionScreen(props) {\n\n  const { question } = props;\n\n  const [response, setResponse] = useState(false);\n  let renderedComponent;\n  useEffect(() => {\n\n    (async () => {\n      setResponse(await getQuestionValue(question.id))\n    })();\n  }, []);\n\n\n  switch (question.type) {\n    case 'open':\n      renderedComponent = (<OpenQuestion value={response} question={question}></OpenQuestion>);\n      break;\n    case 'multiple':\n      renderedComponent = (\n        <MultipleQuestion value={response} question={question}></MultipleQuestion>);\n      break;\n    case 'boolean':\n      renderedComponent = (<BooleanQuestion value={response} question={question}></BooleanQuestion>);\n      break;\n    case 'evaluation':\n      renderedComponent = (<EvaluationQuestion value={response} question={question}></EvaluationQuestion>);\n      break;\n  }\n\n\n  return (\n\n    response != false ?\n      (\n        <View style={{\n          flex: 1,\n          // backgroundColor: 'transparent',\n          justifyContent: 'center'\n        }}>\n\n          <Text style={{ marginTop: 50, color: getTextColor(), textAlign: 'center', justifyContent: 'center', width: '100%', margin: 'auto', fontSize: 40 }}>{question.body}</Text>\n          {renderedComponent}\n\n        </View>\n      ) : null\n  )\n}\n\n\nconst styles = StyleSheet.create({\n\n  container: {\n    flex: 1,\n  },\n\n  btnEntrar: {\n    width: \"40%\",\n    marginTop: 20,\n    marginBottom: 10,\n    margin: 10\n  },\n  containerBtn: {\n    flex: 1,\n    marginTop: 0,\n    // borderTopLeftRadius: 20,\n    // borderTopRightRadius: 20,\n    alignItems: \"center\",\n    flexDirection: 'row',\n    margin: 'auto',\n    justifyContent: 'center'\n  }\n})","import React from 'react';\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport Home from '../Pantallas/Home';\r\nimport Evaluation from '../Pantallas/Evaluation';\r\nconst Stack = createStackNavigator();\r\n\r\nexport default function UnauthenticatedStackNavigator() {\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator initialRouteName=\"Home\">\r\n\r\n\r\n        <Stack.Screen name=\"Home\" component={Home}\r\n\r\n          options={{\r\n            headerShown: false,\r\n          }}\r\n        />\r\n\r\n        <Stack.Screen name=\"Evaluation\" component={Evaluation}\r\n\r\n          options={{\r\n            headerShown: false,\r\n          }}\r\n        />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n\r\n  );\r\n}\r\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Provider} from 'react-redux';\nimport store from './src/redux/auth/store';\nimport UnauthenticatedStackNavigator from './src/Navigation/UnauthenticatedStackNavigator';\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <UnauthenticatedStackNavigator />\n    </Provider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","// index.web.js\nimport { AppRegistry, Platform } from 'react-native';\nimport App from './App.js';\nimport appConfig from './app.json';\n\nconst appName = appConfig.expo.name;\n\nAppRegistry.registerComponent(appName, () => App);\n\nif (Platform.OS === 'web') {\n  const rootTag = document.getElementById('root');\n  AppRegistry.runApplication(appName, { rootTag });\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [387], () => (__webpack_require__(6028)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["initialState","isAuthenticated","user","id","name","paternal_surname","maternal_surname","client_id","email","client","authReducer","state","action","type","Object","assign","payload","client_","ema","userReducer","combineReducers","auth","createStore","rootReducer","DEFAULT_COLORS","PRIMARY_COLOR","SECONDARY_COLOR","BACKGROUND_COLOR","TEXT_COLOR","config","getPrimaryColor","getSecondaryColor","getTextColor","async","savedColors","JSON","parse","AsyncStorage","getItem","error","loadColorsFromAsyncStorage","Loading","props","isVisible","text","_jsx","Overlay","overlayStyle","styles","overlay","children","_jsxs","View","style","view","Grid","sixe","color","Text","StyleSheet","create","backgroundColor","width","height","Dimensions","get","flex","justifyContent","alignItems","marginTop","fontSize","BASE_URL","URL_API","LOCAL_STORAGE_KEY","saveEvaluationToLocalStorage","data","currentData","newArray","obj","push","setItem","stringify","getEvaluationToLocalStorage","testLocalStorage","getEmployeeToLocalStorage","dataString","console","container","modalContainer","modalContent","padding","borderRadius","hideChangeUserModal","setActiveEmployee","showErrorMessage","setLoading","modalVisible","setModalVisible","useState","code","setCode","selectedLanguage","setSelectedLanguage","checkCode","length","employee","log","axios","findEmployeeByCode","success","saveEmployeeToLocalStorage","Modal","animationType","transparent","visible","onRequestClose","Input","placeholder","value","placeholderTextColor","margin","inputStyle","onChangeText","response","Button","title","onPress","Home","route","toastRef","useRef","navigation","useNavigation","windowWidth","loading","setloading","icon","setIcon","require","setBackgroundColor","savedEvaluations","setSavedEvaluations","changeUserModalVisibility","setChangeUserModalVisibility","activeEmployee","sendSavedEvaluations","sended","answers","forEach","answer","requestOptions","method","headers","body","fetch","removeItem","sendAllEvaluations","current","show","useEffect","params","evaluations","Font","loadAsync","iconUrl","getIcon","personalizedIcon","imageURL","responseType","base64Image","Buffer","from","toString","saveIconToLocalStorage","getIconToLocalStorage","uri","savedEmployee","colors","getColors","apply","newColors","primary","secondary","background","setColors","Array","isArray","setTimeout","showChangeUserModal","closeEmployeeSession","removeEmployeeFromLocalStorage","LinearGradient","StatusBar","ChangeUserModal","message","flexDirection","TouchableOpacity","floatingChangeUserButton","Icon","size","Image","source","image","alignSelf","resizeMode","textAlign","fontFamily","full_name","containerStyle","btnEntrar","buttonStyle","paddingHorizontal","titleStyle","fontWeight","navigate","startEvaluation","btnSelectEmployee","floatingButtonContainer","floatingButton","floatingButtonText","Toast","ref","position","opacity","textobaner","marginBottom","bottom","left","saveQuestionsToLocalStorage","questions","key","saveQuestionResponse","questionId","questionType","getAnswers","saveOpenQuestionResponse","saveAnswers","map","element","index","question_id","splice","MultipleQuestion","question","questionOptions","multiple_values","labelStyle","selectedId","setSelectedId","RadioGroup","radioButtons","circleSize","OpenQuestion","localValue","setValue","BooleanQuestion","booleanOptions","textTransform","EvaluationQuestion","emojiStatus","emoji_status","i","evaluation_min","evaluation_max","selectOption","selectedIcon","setSelectedIcon","selectIconOption","iconSelected","windowHeight","Evaluation","setQuestions","totalQuestions","setTotalQuestions","currentPosition","setPosition","isEvaluating","setIsEvaluating","evaluate","connection","NetInfo","isConnected","checkInternetConnection","goToHome","sendEvaluation","labels","time","redirectedFromEvaluation","customStyles","stepIndicatorSize","currentStepIndicatorSize","separatorStrokeWidth","currentStepStrokeWidth","stepStrokeCurrentColor","stepStrokeWidth","stepStrokeFinishedColor","stepStrokeUnFinishedColor","separatorFinishedColor","separatorUnFinishedColor","stepIndicatorFinishedColor","stepIndicatorUnFinishedColor","stepIndicatorCurrentColor","stepIndicatorLabelFontSize","currentStepIndicatorLabelFontSize","stepIndicatorLabelCurrentColor","stepIndicatorLabelFinishedColor","stepIndicatorLabelUnFinishedColor","labelColor","labelSize","currentStepLabelColor","clearAnswers","getQuestions","getQuestionsToLocalStorage","hasData","alert","total","allScreens","QuestionScreen","KeyboardAwareScrollView","containerBtn","backStep","nextStep","StepIndicator","stepCount","setResponse","renderedComponent","getQuestionValue","Stack","createStackNavigator","UnauthenticatedStackNavigator","NavigationContainer","Navigator","initialRouteName","Screen","component","options","headerShown","App","Provider","store","appName","appConfig","AppRegistry","registerComponent","rootTag","document","getElementById","runApplication","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","loaded","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","g","globalThis","this","Function","e","window","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}